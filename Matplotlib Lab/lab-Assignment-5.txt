
# Lab1: Analyze the relationship between the size of houses (measured in square
# footage) and their selling prices in a particular neighborhood. You have collected
# data on various houses in that neighborhood.Create a scatter plot using the
# below data and share your conclusion/analysis.
# Input:
# square_footage = np.array([1200, 1400, 1600, 1800, 2000, 2200, 2400, 2600, 2800,
# 3000])
# selling_prices = np.array([250, 290, 315, 380, 410, 450, 500, 525, 570, 610])

import numpy as np
import matplotlib.pyplot as plt

square_footage = np.array([1200, 1400, 1600, 1800, 2000, 2200, 2400, 2600, 2800,3000])
selling_prices = np.array([250, 290, 315, 380, 410, 450, 500, 525, 570, 610])

plt.scatter(square_footage,selling_prices , c='g')
plt.xlabel("Square Footage (sq.ft.)")
plt.ylabel("Selling Price ($000s)")
plt.title("Housing Prices vs. Square Footage")

plt.grid(True)

plt.show()

--------------------------------------------------------------------------------------------------------------------------------------------

# Lab2: Create a pie chart to visualize the distribution of your monthly income by
# source. You have collected data on the various sources of your income, such as
# salary, freelance work, investments, and rental income. Share your
# conclusion/analysis.
# Input:
# income_sources = ['Salary', 'Freelance', 'Investments', 'Rental', 'Other']
# monthly_income = [5000, 1500, 1000, 600, 400]

import matplotlib
income_sources = ['Salary', 'Freelance', 'Investments', 'Rental', 'Other']
monthly_income = [5000, 1500, 1000, 600, 400]

col = ['lightcoral','lightblue','lightgreen','lightsalmon','violet']

plt.pie(monthly_income, labels=income_sources, colors=col,autopct='%1.1f%%',counterclock=False,)

plt.title("Distribution of Monthly Income by Source")

plt.show()

--------------------------------------------------------------------------------------------------------------------------------------------

# Lab3: Create a pie chart to illustrate the distribution of a company's revenue
# across its various business segments. You have collected data on the revenue
# generated by each segment, such as Product A, Product B, Services, and
# Licensing. Share your conclusion/analysis.
# Input:
# segments = ['Product A', 'Product B', 'Services', 'Licensing']
# revenue_percentages = [45, 25, 15, 15]

import matplotlib.pyplot as plt
# input
segments = ['Product A', 'Product B', 'Services', 'Licensing']
revenue_percentages = [45, 25, 15, 15]

col = ['pink','lightblue','lightgreen','lightsalmon']

plt.pie(revenue_percentages, labels=segments, colors=col,autopct='%1.1f%%',counterclock=False)

plt.title("Distribution of Company Revenue by Business Segment")

# plt.legend()

plt.show()

--------------------------------------------------------------------------------------------------------------------------------------------

import numpy as np
import matplotlib.pyplot as plt

# Input data
months = np.arange(1, 13)
electronics_sales = np.array([25000, 28000, 31000, 27000, 30000, 32000, 35000,
                              36000, 38000, 39000, 41000, 42000])
clothing_sales = np.array([15000, 16000, 17000, 18000, 19000, 20000, 21000, 22000,
                           23000, 24000, 25000, 26000])
home_garden_sales = np.array([18000, 19000, 20000, 21000, 22000, 23000, 24000,
                              25000, 26000, 27000, 28000, 29000])
sports_outdoors_sales = np.array([12000, 13000, 14000, 15000, 16000, 17000, 18000,
                                  19000, 20000, 21000, 22000, 23000])

# Create subplots
plt.subplot(2, 2, 1)
plt.plot(months, electronics_sales, marker='o', color='b')
plt.title("Electronics")
plt.xlabel("Month")
plt.ylabel("Sales Amount")

plt.subplot(2, 2, 2)
plt.plot(months, clothing_sales, marker='o', color='g')
plt.title("Clothing")
plt.xlabel("Month")
plt.ylabel("Sales Amount")

plt.subplot(2, 2, 3)
plt.plot(months, home_garden_sales, marker='o', color='r')
plt.title("Home & Garden")
plt.xlabel("Month")
plt.ylabel("Sales Amount")

plt.subplot(2, 2, 4)
plt.plot(months, sports_outdoors_sales, marker='o', color='m')
plt.title("Sports & Outdoors")
plt.xlabel("Month")
plt.ylabel("Sales Amount")

# Set the overall title and adjust layout
plt.suptitle("Sales Performance by Product Categories", fontsize=16)
plt.tight_layout(rect=[0, 0, 1, 0.96])  # Adjust space for the suptitle

# Show the plot
plt.show()

--------------------------------------------------------------------------------------------------------------------------------------------